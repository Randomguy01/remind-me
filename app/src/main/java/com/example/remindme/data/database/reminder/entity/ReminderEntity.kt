package com.example.remindme.data.database.reminder.entity

import androidx.room.ColumnInfo
import androidx.room.Entity
import androidx.room.PrimaryKey
import com.example.remindme.data.database.reminder.ReminderDatabase
import com.example.remindme.domain.model.Reminder
import kotlinx.datetime.Instant
import kotlinx.datetime.TimeZone
import kotlinx.datetime.toInstant
import kotlinx.datetime.toLocalDateTime

/**
 * A [Reminder] stored in the [ReminderDatabase].
 */
@Entity(tableName = "reminders")
data class ReminderEntity(
    /**
     * The ID of the [Reminder], serves as the [PrimaryKey] for the "reminders" table and is
     * autogenerated by the database.
     */
    @PrimaryKey(autoGenerate = true)
    val id: Int = 0,

    /**
     * The title of the [Reminder].
     */
    val title: String,

    /**
     * The description of the [Reminder].
     */
    val description: String,

    /**
     * The date and time of the [Reminder].
     */
    @ColumnInfo(name = "date_time")
    val dateTime: Instant,
) {
    /**
     * Converts this [ReminderEntity] to a [Reminder] in the domain layer.
     */
    fun toDomain(): Reminder = Reminder(
        id = id,
        title = title,
        description = description,
        dateTime = dateTime.toLocalDateTime(TimeZone.currentSystemDefault())
    )
}

/**
 * Converts a [Reminder] from the Domain layer to a [ReminderEntity] of the Data layer.
 */
fun Reminder.toEntity(): ReminderEntity = ReminderEntity(
    id = id,
    title = title,
    description = description,
    dateTime = dateTime.toInstant(TimeZone.currentSystemDefault())
)